{"version":3,"file":"static/js/222.ca6aabb5.chunk.js","mappings":"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","sources":["components/Contact.jsx","redux/filter/filter-selectors.js","components/ContactList.jsx","components/ContactForm.jsx","components/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { deleteContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\nimport { Box, Flex, GridItem, IconButton, Text } from '@chakra-ui/react';\nimport { RxAvatar } from 'react-icons/rx';\nimport { BsTelephoneFill } from 'react-icons/bs';\nimport { RiDeleteBin5Fill } from 'react-icons/ri';\nexport function Contact({ id, name, number }) {\n  const dispatch = useDispatch();\n  return (\n    <GridItem\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      shadow=\"md\"\n      borderRadius=\"5px\"\n      p=\"7px\"\n      w={['100%', '100%', '360px', '360px', '360px']}\n      bg=\"gray.100\"\n    >\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Box display=\"flex\" alignItems=\"center\" gap=\"5px\">\n          <RxAvatar />\n          <Text color=\"#cf8632\" borderBottom=\"1px solid green\" fontSize=\"xl\">\n            {name}\n          </Text>\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\" gap=\"5px\">\n          <BsTelephoneFill />\n          <Text borderBottom=\"1px solid green\" fontSize=\"xl\">\n            {number}\n          </Text>\n        </Box>\n      </Flex>\n\n      <IconButton\n        borderRadius=\"50%\"\n        aria-label=\"delete contact\"\n        variant=\"outline\"\n        bg=\"#d6a976\"\n        _hover={{ bg: '#cf8632' }}\n        icon={<RiDeleteBin5Fill />}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </IconButton>\n    </GridItem>\n  );\n}\n","export const getFilter = state => state.filter.filter;\n","import { Contact } from 'components/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\nimport { SimpleGrid } from '@chakra-ui/react';\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const filterContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const visibleContacts = filterContacts();\n  return (\n    <SimpleGrid\n      p=\"10px\"\n      w=\"100%\"\n      maxW=\"1200px\"\n      spacing=\"10px\"\n      columns={[1, 1, 2, 2, 3]}\n      justifyContent=\"center\"\n    >\n      {visibleContacts.map(({ id, name, number }) => (\n        <Contact key={id} id={id} name={name} number={number} />\n      ))}\n    </SimpleGrid>\n  );\n}\n","import { useState } from 'react';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { useToast } from '@chakra-ui/react';\n\nimport {\n  FormControl,\n  FormLabel,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  Button,\n} from '@chakra-ui/react';\nimport { RxAvatar } from 'react-icons/rx';\nimport { BsTelephoneFill } from 'react-icons/bs';\nexport function ContactForm() {\n  const toast = useToast();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n    const findContact = contacts.find(\n      contact => contact.name === newContact.name\n    );\n    if (findContact) {\n      toast({\n        position: 'top',\n        title: `${newContact.name} is already in contacts`,\n        status: 'warning',\n        isClosable: true,\n      });\n      return;\n    }\n    dispatch(addContact(newContact));\n    reset();\n  };\n  const handleChange = ({ target: { value, name } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormControl\n      px=\"7px\"\n      py=\"20px\"\n      width={['300px', '400px', '500px', null, null]}\n      isRequired\n      as=\"form\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      gap=\"10px\"\n      onSubmit={handleSubmit}\n    >\n      <FormLabel m=\"0\" color=\"#ffffff\">\n        Name\n      </FormLabel>\n      <InputGroup>\n        <InputLeftElement children={<RxAvatar />}></InputLeftElement>\n        <Input\n          bg=\"gray.100\"\n          placeholder=\"Input name contact\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </InputGroup>\n      <FormLabel m=\"0\" color=\"#ffffff\">\n        Number\n      </FormLabel>\n      <InputGroup>\n        <InputLeftElement children={<BsTelephoneFill />}></InputLeftElement>{' '}\n        <Input\n          bg=\"gray.100\"\n          placeholder=\"Input pnone number\"\n          type=\"tel\"\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </InputGroup>\n\n      <Button\n        _hover={{ color: '#cf8632' }}\n        bg=\"gray.100\"\n        marginTop=\"12px\"\n        type=\"submit\"\n      >\n        Add contact\n      </Button>\n    </FormControl>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { FormControl, FormLabel, Heading, Input } from '@chakra-ui/react';\nexport function Filter() {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Heading as=\"h2\" color=\"#ffffff\" textAlign=\"center\" py=\"10px\">\n        My phone contacts\n      </Heading>\n      <FormControl display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n        <FormLabel color=\"#cf8632\">FILTER CONTACTS</FormLabel>\n        <Input\n          bg=\"gray.100\"\n          placeholder=\"Search contact by name\"\n          variant=\"outline\"\n          width=\"300px\"\n          onChange={event => dispatch(setFilter(event.target.value))}\n          type=\"text\"\n          name=\"filter\"\n        ></Input>\n      </FormControl>\n    </>\n  );\n}\n","import { ContactList } from 'components/ContactList';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["Contact","id","name","number","dispatch","useDispatch","display","justifyContent","alignItems","shadow","borderRadius","p","w","bg","flexDirection","gap","color","borderBottom","fontSize","variant","_hover","icon","onClick","deleteContact","getFilter","state","filter","ContactList","contacts","useSelector","selectContacts","useEffect","fetchContacts","visibleContacts","contact","toLowerCase","includes","maxW","spacing","columns","map","ContactForm","toast","useToast","useState","setName","setNumber","handleChange","target","value","reset","px","py","width","isRequired","as","onSubmit","event","preventDefault","newContact","find","position","title","status","isClosable","addContact","m","children","I","placeholder","type","onChange","pattern","marginTop","Filter","textAlign","setFilter"],"sourceRoot":""}